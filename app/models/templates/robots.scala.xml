@import utils._
@import models.SelectTaxYear._
@import models.OtherBenefit._
@import models.OtherCompanyBenefit._
@import models.OtherTaxableIncome._
@import models.InternationalAddress._
@import models.UkAddress._
@import models.AddressLookup._
@import models.AnyTaxPaid._
@import models.AnyAgentRef._
@import models.TelephoneOption._
@import models.ItmpNameFormat._
@import play.api.i18n.Messages

@(userAnswers: UserAnswers)(implicit messages: Messages)
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ctr>
	<userDetails>
		@userAnswers.name.map{ value =>
		<name>@ItmpNameFormat.asString(value)</name>
		}
		@userAnswers.nino.map{ value =>
		<nino>@value</nino>
		}
	</userDetails>

	<claimSection>
		@userAnswers.selectTaxYear.map{ value =>
		<selectedTaxYear>@value.asString</selectedTaxYear>
		}
		@userAnswers.employmentDetails.map{ value =>
		<employmentDetails>@value</employmentDetails>
		}
		@userAnswers.enterPayeReference.map{ value =>
		<payeReference>@userAnswers.enterPayeReference</payeReference>
		}
		@userAnswers.detailsOfEmploymentOrPension.map{ value =>
		<detailsOfEmploymentOrPension>@userAnswers.detailsOfEmploymentOrPension</detailsOfEmploymentOrPension>
		}
	</claimSection>


	<benefitSection>
		@userAnswers.anyBenefits.map{ value =>
		<anyBenefits>@value</anyBenefits>
		}
		@userAnswers.selectBenefits.map{ value =>
		<selectBenefits>@value.mkString(", ")</selectBenefits>
		}
		@userAnswers.howMuchBereavementAllowance.map{ value =>
		<howMuchBereavementAllowance>@value</howMuchBereavementAllowance>
		}
		@userAnswers.howMuchCarersAllowance.map { value =>
		<howMuchCarersAllowance>@value</howMuchCarersAllowance>
		}
		@userAnswers.howMuchJobseekersAllowance.map { value =>
		<howMuchJobseekersAllowance>@value</howMuchJobseekersAllowance>
		}
		@userAnswers.howMuchEmploymentAndSupportAllowance.map{ value =>
		<howMuchEmploymentAndSupportAllowance>@value</howMuchEmploymentAndSupportAllowance>
		}
		@userAnswers.howMuchIncapacityBenefit.map { value =>
		<howMuchIncapacityBenefit>@value</howMuchIncapacityBenefit>
		}
		@userAnswers.howMuchStatePension.map{ value =>
		<howMuchStatePension>@value</howMuchStatePension>
		}
		@userAnswers.otherBenefit.map{ value =>
		<otherBenefits>
			@OtherBenefit.toXml(value)
		</otherBenefits>
		}
	</benefitSection>

	<companyBenefitsSection>
		@userAnswers.anyCompanyBenefits.map{ value =>
		<anyCompanyBenefits>@value</anyCompanyBenefits>
		}
		@userAnswers.selectCompanyBenefits.map{ value =>
		<selectCompanyBenefits>@value.mkString(", ")</selectCompanyBenefits>
		}
		@userAnswers.howMuchCarBenefits.map{ value =>
		<howMuchCarBenefits>@value</howMuchCarBenefits>
		}
		@userAnswers.howMuchFuelBenefit.map{ value =>
		<howMuchFuelBenefit>@value</howMuchFuelBenefit>
		}
		@userAnswers.howMuchMedicalBenefits.map{ value =>
		<howMuchMedicalBenefits>@value</howMuchMedicalBenefits>
		}
		@userAnswers.otherCompanyBenefit.map{ value =>
		<otherCompanyBenefits>
			@OtherCompanyBenefit.toXml(value)
		</otherCompanyBenefits>
		}
	</companyBenefitsSection>

	<taxableIncomeSection>
		@userAnswers.anyTaxableIncome.map{ value =>
		<anyTaxableIncome>@value</anyTaxableIncome>
		}
		@userAnswers.selectTaxableIncome.map{ value =>
		<selectTaxableIncome>@value.mkString(", ")</selectTaxableIncome>
		}
		@userAnswers.howMuchRentalIncome.map{ value =>
		<rentalIncome>
			<howMuch>@value</howMuch>
			@userAnswers.anyTaxableRentalIncome.map{ value =>
			@AnyTaxPaid.toXml(value)
			}
		</rentalIncome>
		}
		@userAnswers.howMuchBankInterest.map{ value =>
		<bankInterest>
			<howMuch>@value</howMuch>
			@userAnswers.anyTaxableBankInterest.map{ value =>
			@AnyTaxPaid.toXml(value)
			}
		</bankInterest>
		}
		@userAnswers.howMuchInvestmentOrDividend.map{ value =>
		<investmentOrDividend>
			<howMuch>@value</howMuch>
			@userAnswers.anyTaxableInvestments.map{ value =>
			@AnyTaxPaid.toXml(value)
			}
		</investmentOrDividend>
		}
		@userAnswers.howMuchForeignIncome.map{ value =>
		<foreignIncome>
			<howMuch>@value</howMuch>
			@userAnswers.anyTaxableForeignIncome.map{ value =>
			@AnyTaxPaid.toXml(value)
			}
		</foreignIncome>
		}
		@userAnswers.otherTaxableIncome.map{ value =>
		<otherTaxableIncome>
			@OtherTaxableIncome.toXml(value)
		</otherTaxableIncome>
		}
	</taxableIncomeSection>

	<paymentSection>
		@userAnswers.whereToSendPayment.map{ value =>
		<whereToSendThePayment>@value</whereToSendThePayment>
		}
		@userAnswers.paymentAddressCorrect.map{ value =>
		<paymentAddressCorrect>@value</paymentAddressCorrect>
		}
		@userAnswers.nomineeFullName.map{ value =>
		<nomineeFullname>@value</nomineeFullname>
		}
		@userAnswers.anyAgentRef.map{ value =>
		@AnyAgentRef.toXml(value)
		}
		@userAnswers.isPaymentAddressInTheUK.map{ value =>
		<isPaymentAddressInTheUK>@value</isPaymentAddressInTheUK>
		}
		<paymentAddress>
			@userAnswers.paymentUKAddress.map{ value =>
			@UkAddress.toXml(value)
			}
			@userAnswers.paymentInternationalAddress.map{ value =>
			@InternationalAddress.toXml(value)
			}
			@userAnswers.paymentLookupAddress.map{ value =>
			@AddressLookup.toXml(value)
			}
		</paymentAddress>
	</paymentSection>

	<contactSection>
		@userAnswers.anyTelephoneNumber.map{ value =>
		@TelephoneOption.toXml(value)
		}
	</contactSection>
</ctr>
