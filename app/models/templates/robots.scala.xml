@import utils._

@(userAnswers: UserAnswers, robotsXmlHelper: RobotsXmlHelper)
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ctr>
	<userDetails>
		<name>@userAnswers.userDetails.get.name</name>
		<nino>@userAnswers.userDetails.get.nino</nino>
	</userDetails>

	<claimSection>
		<selectedTaxYear>@robotsXmlHelper.selectTaxYear</selectedTaxYear>
		@userAnswers.employmentDetails.map{ value =>
			<employmentDetails>@value</employmentDetails>
		}
		@userAnswers.enterPayeReference.map{ value =>
			<payeReference>@userAnswers.enterPayeReference</payeReference>
		}
		@userAnswers.detailsOfEmploymentOrPension.map{ value =>
			<detailsOfEmploymentOrPension>@userAnswers.detailsOfEmploymentOrPension</detailsOfEmploymentOrPension>
		}
	</claimSection>

	@if(userAnswers.anyBenefits.getOrElse(false)){
	<benefitSection>
		<anyBenefits>@userAnswers.anyBenefits</anyBenefits>
		<selectBenefits>@userAnswers.selectBenefits.get.mkString(", ")</selectBenefits>
		@userAnswers.howMuchBereavementAllowance.map{ value =>
			<howMuchBereavementAllowance>@value</howMuchBereavementAllowance>
		}
		@userAnswers.howMuchCarersAllowance.map { value =>
			<howMuchCarersAllowance>@value</howMuchCarersAllowance>
		}
		@userAnswers.howMuchJobseekersAllowance.map { value =>
			<howMuchJobseekersAllowance>@value</howMuchJobseekersAllowance>
		}
		@userAnswers.howMuchEmploymentAndSupportAllowance.map{ value =>
			<howMuchEmploymentAndSupportAllowance>@value</howMuchEmploymentAndSupportAllowance>
		}
		@userAnswers.howMuchIncapacityBenefit.map { value =>
			<howMuchIncapacityBenefit>@value</howMuchIncapacityBenefit>
		}
		@userAnswers.howMuchStatePension.map{ value =>
			<howMuchStatePension>@value</howMuchStatePension>
		}
		@userAnswers.otherBenefit.map{ value =>
			<otherBenefits>
				@robotsXmlHelper.otherBenefits(value)
			</otherBenefits>
		}
	</benefitSection>
	}

	@if(userAnswers.anyCompanyBenefits.getOrElse(false)){
	<companyBenefitsSection>
		<anyCompanyBenefits>@userAnswers.anyCompanyBenefits</anyCompanyBenefits>
		<selectCompanyBenefits>@userAnswers.selectCompanyBenefits.get.mkString(", ")</selectCompanyBenefits>
		@userAnswers.howMuchCarBenefits.map{ value =>
			<howMuchCarBenefits>@value</howMuchCarBenefits>
		}
		@userAnswers.howMuchFuelBenefit.map{ value =>
			<howMuchFuelBenefit>@value</howMuchFuelBenefit>
		}
		@userAnswers.howMuchMedicalBenefits.map{ value =>
			<howMuchMedicalBenefits>@value</howMuchMedicalBenefits>
		}
		@if(userAnswers.otherCompanyBenefit){
			<otherCompanyBenefits>
				@robotsXmlHelper.otherCompanyBenefits(userAnswers.otherCompanyBenefit.get)
			</otherCompanyBenefits>
		}
	</companyBenefitsSection>
	}

	@if(userAnswers.anyTaxableIncome.getOrElse(false)){
	<taxableIncomeSection>
		<anyTaxableIncome>@userAnswers.anyTaxableIncome</anyTaxableIncome>
		<selectTaxableIncome>@userAnswers.selectTaxableIncome.get.mkString(", ")</selectTaxableIncome>
		@if(userAnswers.howMuchRentalIncome.isDefined){
			<rentalIncome>
				<howMuch>@userAnswers.howMuchRentalIncome</howMuch>
				<anyTaxPaid>@robotsXmlHelper.anyIncome(userAnswers.anyTaxableRentalIncome.get)</anyTaxPaid>
				<taxPaid>@robotsXmlHelper.incomeAmount(userAnswers.anyTaxableRentalIncome.get)</taxPaid>
			</rentalIncome>
		}
		@if(userAnswers.howMuchBankInterest.isDefined){
			<bankInterest>
				<howMuch>@userAnswers.howMuchBankInterest</howMuch>
				<anyTaxPaid>@robotsXmlHelper.anyIncome(userAnswers.anyTaxableBankInterest.get)</anyTaxPaid>
				<taxPaid>@robotsXmlHelper.incomeAmount(userAnswers.anyTaxableBankInterest.get)</taxPaid>
			</bankInterest>
		}
		@if(userAnswers.howMuchInvestmentOrDividend.isDefined){
			<investmentOrDividend>
				<howMuch>@userAnswers.howMuchInvestmentOrDividend</howMuch>
				<anyTaxPaid>@robotsXmlHelper.anyIncome(userAnswers.anyTaxableInvestments.get)</anyTaxPaid>
				<taxPaid>@robotsXmlHelper.incomeAmount(userAnswers.anyTaxableInvestments.get)</taxPaid>
			</investmentOrDividend>
		}
		@if(userAnswers.howMuchForeignIncome.isDefined){
			<foreignIncome>
				<howMuch>@userAnswers.howMuchForeignIncome</howMuch>
				<anyTaxPaid>@robotsXmlHelper.anyIncome(userAnswers.anyTaxableForeignIncome.get)</anyTaxPaid>
				<taxPaid>@robotsXmlHelper.incomeAmount(userAnswers.anyTaxableForeignIncome.get)</taxPaid>
			</foreignIncome>
		}
		@if(userAnswers.otherTaxableIncome.isDefined){
			<otherTaxableIncome>
				@robotsXmlHelper.otherTaxableIncome(userAnswers.otherTaxableIncome.get)
			</otherTaxableIncome>
		}
	</taxableIncomeSection>
	}

	<paymentSection>
		@userAnswers.whereToSendPayment.map{ value =>
			<whereToSendThePayment>@value</whereToSendThePayment>
		}
		@if(userAnswers.paymentAddressCorrect.isDefined){
			<paymentAddressCorrect>@userAnswers.paymentAddressCorrect</paymentAddressCorrect>
		}
		@userAnswers.nomineeFullName.map{ value =>
			<nomineeFullname>@value</nomineeFullname>
		}
		@userAnswers.anyAgentRef.map{ value =>
			<anyAgentRef>@robotsXmlHelper.anyAgentRef(userAnswers.anyAgentRef.get)</anyAgentRef>
		}
		@userAnswers.anyAgentRef.map{ value =>
			<agentReference>@robotsXmlHelper.anyAgentReference(userAnswers.anyAgentRef.get)</agentReference>
		}
		@userAnswers.isPaymentAddressInTheUK.map{ value =>
			<isPaymentAddressInTheUK>@userAnswers.isPaymentAddressInTheUK</isPaymentAddressInTheUK>
		}
		<paymentAddress>
			@userAnswers.paymentUKAddress.map{ value =>
				@robotsXmlHelper.ukAddress
			}
			@userAnswers.paymentInternationalAddress.map{ value =>
				@robotsXmlHelper.internationalAddress
			}
			@userAnswers.paymentLookupAddress.map{ value =>
				@robotsXmlHelper.lookupAddress
			}
		</paymentAddress>
	</paymentSection>

	<contactSection>
		<anyTelephoneNumber>@robotsXmlHelper.anyTelephone(userAnswers.anyTelephoneNumber.get)</anyTelephoneNumber>
		<telephoneNumber>@robotsXmlHelper.anyTelephoneNumber(userAnswers.anyTelephoneNumber.get)</telephoneNumber>
	</contactSection>
</ctr>